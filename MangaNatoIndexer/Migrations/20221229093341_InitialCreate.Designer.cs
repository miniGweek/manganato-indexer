// <auto-generated />
using System;
using MangaNatoIndexer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MangaNatoIndexer.Migrations
{
    [DbContext(typeof(ManganatoContext))]
    [Migration("20221229093341_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MangaNatoIndexer.Manga", b =>
                {
                    b.Property<int>("MangaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MangaId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MangaId");

                    b.ToTable("Mangas");
                });

            modelBuilder.Entity("MangaNatoIndexer.MangaDetail", b =>
                {
                    b.Property<int>("MangaDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MangaDetailId"));

                    b.Property<int>("ChapterCount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastChapterUpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MangaId")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MangaDetailId");

                    b.HasIndex("MangaId");

                    b.ToTable("MangaDetails");
                });

            modelBuilder.Entity("MangaNatoIndexer.MangaDetail", b =>
                {
                    b.HasOne("MangaNatoIndexer.Manga", null)
                        .WithMany("MangaDetails")
                        .HasForeignKey("MangaId");
                });

            modelBuilder.Entity("MangaNatoIndexer.Manga", b =>
                {
                    b.Navigation("MangaDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
